name: Book Service CI

on:
  push:
    branches: [ "step-0" ]
    paths:
      - 'apps/book-service/**'
  workflow_dispatch:

env:
  SERVICE_NAME: book-service

jobs:
  ci-and-build-image:
    name: Run tests, package and build image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Setup env for running mariaDB
        run: |
          sudo apt-get update
          sudo apt-get install libncurses5
      ### CI
      - name: Run tests
        run: ./apps/${{ env.SERVICE_NAME }}/scripts/ci.sh
      - name: Upload report
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: ci-report
          path: ./apps/${{ env.SERVICE_NAME }}/build/reports
      - name: Package
        run: ./apps/${{ env.SERVICE_NAME }}/scripts/package.sh
      ## Build and upload docker image
      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for details
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: ghcr.io/${{ github.actor }}/${{ env.SERVICE_NAME }}
          tags: |
            type=sha
      - name: Build and push Docker image
        id: docker_push
        uses: docker/build-push-action@v3.2.0
        with:
          context: ./apps/${{ env.SERVICE_NAME }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
    outputs:
      docker-tags: ${{ steps.meta.outputs.tags }}
      docker-labels: ${{ steps.meta.outputs.labels }}

  generate-manifest:
    needs: ci-and-build-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      ### generate k8s manifest
      - name: Generate k8s manifest
        run: |
          images=${{ needs.ci-and-build-image.outputs.docker-tags }}
          ./apps/${{ env.SERVICE_NAME }}/scripts/kustomize-build.sh kind-local
          ./apps/${{ env.SERVICE_NAME }}/scripts/kustomize-build.sh kind-stable

      ### git commit
      - name: Auto push the manifest
        uses: EndBug/add-and-commit@v9
        with:
          pull: '--rebase --autostash'
          committer_name: github-actions
          message: "auto generated manifest of book-service"
